# Cassandra Headless Service
apiVersion: v1
kind: Service
metadata:
  namespace: somenamespace
  labels:
    name: ugc
  name: cassandra
spec:
  clusterIP: None
  ports:
    - port: 9042
      name: cql
    - port: 7000
      name: inter-node
    - port: 7001 
      name: ssl-inter-node
  selector:
    app: cassandra
---
# Cassandra StatefulSet
apiVersion: "apps/v1beta1"
kind: StatefulSet
metadata:
  namespace: somenamespace
  labels: 
    name: ugc
  name: cassandra  
spec:
  serviceName: cassandra
  replicas: 3
  template:
    metadata:
      labels:
        app: cassandra
    spec:
      containers:
      - name: cassandra
        image: siganberg/cassandra_kube:latest
        imagePullPolicy: Always
        lifecycle:
          postStart:
            exec:
              command:
                - bash
                - -c 
                - >                 
                  #-- Copy environment variables to the following path so CRON can access the values  
                  printenv | grep -v "no_proxy" >> /etc/environment; 
                  #-- Generate CRON schedule for the backup
                  echo "${CASSANDRA_BACKUP_CRON} root /cassandra-aws-backup.sh -b s3://${S3_BUCKET_NAME}/test/ -vcC -u ${CASSANDRA_USER} -p ${CASSANDRA_PASS} > /var/log/cassandra/backup.log 2>&1" > /etc/cron.d/cassandra_cron;
                  cron;
        #-- Uncomment this section for restoration. This will stop cassandra process to auto start
        #command:  
        #   - /bin/bash
        #   - -c
        #   - while true; do sleep 30; done;
        ports:
        - containerPort: 7000
          name: intra-node 
        - containerPort: 7001
          name: tls-intra-node
        - containerPort: 7199
          name: jmx
        - containerPort: 9042
          name: cql
        resources:
          limits:
            cpu: 0.5                           
        env:
          - name: MAX_HEAP_SIZE
            value: 256M
          - name: HEAP_NEWSIZE
            value: 100M
          - name: CASSANDRA_SEEDS
            value: "cassandra-0.cassandra.somenamespace.svc.cluster.local"            
          - name: CASSANDRA_CLUSTER_NAME
            value: "somenamespace"
          - name: CASSANDRA_DC
            value: "DC1"
          - name: CASSANDRA_RACK
            value: "Rack1"
          - name: CASSANDRA_AUTO_BOOTSTRAP
            value: "false"
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: GossipingPropertyFileSnitch  
          - name: CASSANDRA_BACKUP_CRON
            value: "0 1 * * *"
          - name: CASSANDRA_USER
            value: "cassandra"
          - name: CASSANDRA_PASS
            value: "somepassword"
          - name: AWS_ACCESS_KEY_ID
            value: "enter you aws access key"
          - name: AWS_SECRET_ACCESS_KEY
            value: "enter your aws your secret "
          - name: S3_BUCKET_NAME
            value: "s3bucket"
          - name: POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP   
        #-- comment readinessProbe during restoration.             
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - /ready-probe.sh
          initialDelaySeconds: 15
          timeoutSeconds: 5     
        volumeMounts:
        -  mountPath : /var/lib/cassandra/data
           name: cassandra-data
      imagePullSecrets:
        - name: harbor-authenticate
  volumeClaimTemplates:
    - metadata: 
        name: cassandra-data
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi